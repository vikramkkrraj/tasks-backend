-- Task 1: List of books borrowed by each borrower
db.loans.aggregate([
  { $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "book"
  }},
  { $unwind: "$book" },
  { $group: {
      _id: "$borrowerId",
      borrowedBooks: { $push: "$book.title" }
  }}
])

-- Task 2: Top 3 most borrowed books
db.loans.aggregate([
  { $group: {
      _id: "$bookId",
      borrowCount: { $sum: 1 }
  }},
  { $sort: { borrowCount: -1 } },
  { $limit: 3 }
])

-- Task 3: Borrowerâ€™s loan history with book details (borrowerId = User1)
db.loans.aggregate([
  { $match: { borrowerId: "User1" } },
  { $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "book"
  }},
  { $unwind: "$book" },
  { $project: {
      bookTitle: "$book.title",
      loanDate: 1,
      returnDate: 1,
      status: 1
  }}
])

-- Task 4: Borrowers who have borrowed more than 2 books
db.loans.aggregate([
  { $group: {
      _id: "$borrowerId",
      count: { $sum: 1 }
  }},
  { $match: { count: { $gt: 2 } } }
])

-- Task 5: Full report of all loans (with borrower name and book title)
db.loans.aggregate([
  { $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "book"
  }},
  { $unwind: "$book" },
  { $lookup: {
      from: "borrowers",
      localField: "borrowerId",
      foreignField: "_id",
      as: "borrower"
  }},
  { $unwind: "$borrower" },
  { $project: {
      borrowerName: "$borrower.name",
      bookTitle: "$book.title",
      status: 1,
      loanDate: 1,
      returnDate: 1
  }}
])

-- Task 6: Genre-wise count of borrowed books
db.loans.aggregate([
  { $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "book"
  }},
  { $unwind: "$book" },
  { $group: {
      _id: "$book.genre",
      count: { $sum: 1 }
  }}
])

-- Task 7: Current borrowed books (status = "Borrowed") with borrower and book title
db.loans.aggregate([
  { $match: { status: "Borrowed" } },
  { $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "book"
  }},
  { $unwind: "$book" },
  { $lookup: {
      from: "borrowers",
      localField: "borrowerId",
      foreignField: "_id",
      as: "borrower"
  }},
  { $unwind: "$borrower" },
  { $project: {
      borrowerName: "$borrower.name",
      bookTitle: "$book.title",
      loanDate: 1
  }}
])

-- Task 8: Number of returned books per borrower
db.loans.aggregate([
  { $match: { status: "Returned" } },
  { $group: {
      _id: "$borrowerId",
      returnedCount: { $sum: 1 }
  }}
])

-- Task 9: Borrowers who borrowed multiple genres
db.loans.aggregate([
  { $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "book"
  }},
  { $unwind: "$book" },
  { $group: {
      _id: "$borrowerId",
      genres: { $addToSet: "$book.genre" }
  }},
  { $project: {
      genreCount: { $size: "$genres" }
  }},
  { $match: { genreCount: { $gt: 1 } } }
])

-- Task 10: List borrowers with total borrow count and names
db.loans.aggregate([
  { $group: {
      _id: "$borrowerId",
      totalBorrows: { $sum: 1 }
  }},
  { $lookup: {
      from: "borrowers",
      localField: "_id",
      foreignField: "_id",
      as: "borrower"
  }},
  { $unwind: "$borrower" },
  { $project: {
      name: "$borrower.name",
      totalBorrows: 1
  }}
])